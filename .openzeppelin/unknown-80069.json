{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x65a9ED316818748e26F572Bbf14b5dd1aeA20407",
      "txHash": "0x6b3eb0928ad7a63db4a93b5dfc670a0f9d29eb22630a02245b372373dc13ed65",
      "kind": "transparent"
    },
    {
      "address": "0x84FD870Cd64F933ed3638A63fb2B0Fe975b3F301",
      "txHash": "0xb418e738bb74674c4b8e90e9c8ae8d7c87af20348bd6d31ddd39ed4a125c839e",
      "kind": "transparent"
    },
    {
      "address": "0x9a3E3b819EAB5890E95499cA8e256B4d7bdA262F",
      "txHash": "0xe04e4b44d85c2082074fb08b76b6ec9fac7883df977417d8925977ccab186b69",
      "kind": "transparent"
    },
    {
      "address": "0x900A757EffA8a2e05500179A5bD94B11Ee1D856E",
      "txHash": "0x0f137f915b7cba4272abcd2f02ccb4c544cef9e9acb0267674dcb94553153128",
      "kind": "transparent"
    },
    {
      "address": "0x096096020105e78D087FD31E5D6E6Ba36716Fb6F",
      "txHash": "0x7dbbcfc5e9ca45bc4a9e666354640efdf240c453a76a66dd869ac809731b2e75",
      "kind": "transparent"
    },
    {
      "address": "0xc8fc41731dB0Cb589b3B1C5B1F7C7e543656693b",
      "txHash": "0xff4c8229f257bf93663066f23d2552b4066db1571f7234b4a97e1cdad5c03faa",
      "kind": "transparent"
    },
    {
      "address": "0xd1DDc66353F06A9C41d650d6C4663B851aE039C7",
      "txHash": "0xd59cdb2f2b1159fb049cab89818844d1b74b3b6cd8e0f0c1d974afad71235a3a",
      "kind": "transparent"
    },
    {
      "address": "0xe93EFC4436b02f914f4fbAC411670B422e293B67",
      "txHash": "0xe7ddff334369a0aad016dc03bf31caea3036030e18dd75d8b96c4ea61ea9103e",
      "kind": "transparent"
    },
    {
      "address": "0xEAF69Ab9A7C89cb05C030314A04bDBe6EaeDc567",
      "txHash": "0x61d6316772af0add27e903986ddd32a7f0ae4b7733ac7997ce4cd83e18213a82",
      "kind": "transparent"
    },
    {
      "address": "0x7419842D90A488eE4d5B23877dBc8BBA55b0b479",
      "txHash": "0x2d6fc190da846a40371c4200cc234edaeeb1ba402cccd554ff2266c9896af9e3",
      "kind": "transparent"
    }
  ],
  "impls": {
    "e3a1d244532d7ec2b8d13767f724e23b1e478d755213caf35d295e9abcd4e27c": {
      "address": "0x5C92e02d2d87610758Fc87ea77767eA0B324ED78",
      "txHash": "0x012907f45203be2b5f96e4a14f2ff51f3aff83e984256b847aa91e93b8897908",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "152",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "157",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "minter",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "Project",
            "src": "contracts/Project.sol:16"
          },
          {
            "label": "nextProjectId",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "Project",
            "src": "contracts/Project.sol:17"
          },
          {
            "label": "nameHashes",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "Project",
            "src": "contracts/Project.sol:19"
          },
          {
            "label": "names",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "Project",
            "src": "contracts/Project.sol:20"
          },
          {
            "label": "types",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_uint8)",
            "contract": "Project",
            "src": "contracts/Project.sol:21"
          },
          {
            "label": "_metadata",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_bytes_storage))",
            "contract": "Project",
            "src": "contracts/Project.sol:22"
          },
          {
            "label": "operators",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "contract": "Project",
            "src": "contracts/Project.sol:23"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_bytes_storage))": {
            "label": "mapping(uint256 => mapping(bytes32 => bytes))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint8)": {
            "label": "mapping(uint256 => uint8)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "66a44f3575e63cebbfd40637398819c8ac1ef8d3055ec9bef9cba8604c3f329b": {
      "address": "0xECe93B0B76e24818232051Bb2eF9797742361686",
      "txHash": "0x7088ca1b0617c177e8a8b1b0679a9cd93fa6123920ea20fe668b1f628c742034",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "project",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(IProject)6964",
            "contract": "ProjectRegistry",
            "src": "contracts/ProjectRegistry.sol:9"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IProject)6964": {
            "label": "contract IProject",
            "numberOfBytes": "20"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "ae31d02e87a71a86e933911420f51c2e7f4ba98710f9ff40e7acb3be9842f175": {
      "address": "0xdD0af7a1CB2971d78Fd329D66EBb5EE85148412a",
      "txHash": "0xa35fb3c5067668ff73960a5b7b7847dcac338701d1dc70222e0d8b09e01b78b1",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "project",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "ioIDStore",
            "src": "contracts/ioIDStore.sol:14"
          },
          {
            "label": "ioIDRegistry",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "ioIDStore",
            "src": "contracts/ioIDStore.sol:15"
          },
          {
            "label": "price",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "ioIDStore",
            "src": "contracts/ioIDStore.sol:16"
          },
          {
            "label": "projectDeviceContract",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ioIDStore",
            "src": "contracts/ioIDStore.sol:17"
          },
          {
            "label": "deviceContractProject",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ioIDStore",
            "src": "contracts/ioIDStore.sol:18"
          },
          {
            "label": "projectAppliedAmount",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ioIDStore",
            "src": "contracts/ioIDStore.sol:19"
          },
          {
            "label": "projectActivedAmount",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ioIDStore",
            "src": "contracts/ioIDStore.sol:20"
          },
          {
            "label": "feeReceiver",
            "offset": 0,
            "slot": "108",
            "type": "t_address",
            "contract": "ioIDStore",
            "src": "contracts/ioIDStore.sol:21"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "fd90c528a53c78216f381bc63c2d7eddf8b206998e238ae70e2ca79c9c2f1a0c": {
      "address": "0x67fc17bff966f16BF7B38DD416F29023122A9902",
      "txHash": "0xecc266dda75f507f98a15808b027519675f4f5b7561a7367ca3d8cc62c1cfc07",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:17"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:20"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:23"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "nextId",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ioID",
            "src": "contracts/ioID.sol:20"
          },
          {
            "label": "minter",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "ioID",
            "src": "contracts/ioID.sol:21"
          },
          {
            "label": "walletRegistry",
            "offset": 0,
            "slot": "203",
            "type": "t_address",
            "contract": "ioID",
            "src": "contracts/ioID.sol:22"
          },
          {
            "label": "walletImplementation",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "ioID",
            "src": "contracts/ioID.sol:23"
          },
          {
            "label": "_wallets",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_bytes32,t_address)",
            "contract": "ioID",
            "src": "contracts/ioID.sol:25"
          },
          {
            "label": "_devices",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ioID",
            "src": "contracts/ioID.sol:26"
          },
          {
            "label": "deviceProject",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ioID",
            "src": "contracts/ioID.sol:28"
          },
          {
            "label": "projectDeviceCount",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ioID",
            "src": "contracts/ioID.sol:29"
          },
          {
            "label": "_projectIDs",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_address))",
            "contract": "ioID",
            "src": "contracts/ioID.sol:30"
          },
          {
            "label": "_resolvers",
            "offset": 0,
            "slot": "210",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ioID",
            "src": "contracts/ioID.sol:31"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_address))": {
            "label": "mapping(uint256 => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "ba98d9221271ef03e19dc7230a3eb4a6deeca850bcec30a436c9734258cf942b": {
      "address": "0x8B2FCDD41e9fdCC22C3C42F707415ED8F4812a21",
      "txHash": "0x5c8a18d6904437d2e0ec6c4d9b3e08b7020d80e0eb52eb0b224a014db01dcca3",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "DOMAIN_SEPARATOR",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32",
            "contract": "ioIDRegistry",
            "src": "contracts/ioIDRegistry.sol:25"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_struct(Counter)4017_storage)",
            "contract": "ioIDRegistry",
            "src": "contracts/ioIDRegistry.sol:29"
          },
          {
            "label": "records",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_struct(Record)7899_storage)",
            "contract": "ioIDRegistry",
            "src": "contracts/ioIDRegistry.sol:36"
          },
          {
            "label": "ids",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ioIDRegistry",
            "src": "contracts/ioIDRegistry.sol:37"
          },
          {
            "label": "registeredNFT",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "contract": "ioIDRegistry",
            "src": "contracts/ioIDRegistry.sol:38"
          },
          {
            "label": "ioIDStore",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "ioIDRegistry",
            "src": "contracts/ioIDRegistry.sol:39"
          },
          {
            "label": "ioID",
            "offset": 0,
            "slot": "7",
            "type": "t_address",
            "contract": "ioIDRegistry",
            "src": "contracts/ioIDRegistry.sol:40"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)4017_storage)": {
            "label": "mapping(address => struct Counters.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Record)7899_storage)": {
            "label": "mapping(address => struct ioIDRegistry.Record)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)4017_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Record)7899_storage": {
            "label": "struct ioIDRegistry.Record",
            "members": [
              {
                "label": "hash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "uri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    }
  }
}
