{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x57d0aB462deb7Ac3D7542D433c8FCA2dc753a6A2",
      "txHash": "0xd40ef6c0d3631b7a847ec2d92e3a7467c9f469dacaa38746f2da23a1744b4e70",
      "kind": "transparent"
    },
    {
      "address": "0x48fFfD2805fb1CC3B14c41E9EB827863d252d15f",
      "txHash": "0xdc3efc7ff6b666ff69a49fbe475a03dfe7242ba0bbe9234e281f2026ebf46a69",
      "kind": "transparent"
    },
    {
      "address": "0x7Ab4682703D442415272CEEc2fc13f391a5D9041",
      "txHash": "0xbec778322698f8a91974ce2138dbd7f638e623611f19527fbd2f0203d6567f9e",
      "kind": "transparent"
    },
    {
      "address": "0x04DCCaA87fef0DB7dbc86f074Ba6b4051A1837CF",
      "txHash": "0x8c8b2588968c1974b6b539d5893a2588f3fe4c898cf976558d2280fc768d0ffa",
      "kind": "transparent"
    },
    {
      "address": "0xf29EFbA688b77Ea29C8152488De557A2efff5c7d",
      "txHash": "0x994a1f51c1437b00b0300eb87015523a2102eea1298c1396033e5b6cc7d89cc7",
      "kind": "transparent"
    }
  ],
  "impls": {
    "e3a1d244532d7ec2b8d13767f724e23b1e478d755213caf35d295e9abcd4e27c": {
      "address": "0x7Ea228EfA27C2aa81d3f49dEdab34A2Ccb102355",
      "txHash": "0x8863afe397dd4dcb3f103224572dbe83dd8f78d7e0698aba05f76ba01ea10651",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "152",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "157",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "minter",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "Project",
            "src": "contracts/Project.sol:16"
          },
          {
            "label": "nextProjectId",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "Project",
            "src": "contracts/Project.sol:17"
          },
          {
            "label": "nameHashes",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "Project",
            "src": "contracts/Project.sol:19"
          },
          {
            "label": "names",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "Project",
            "src": "contracts/Project.sol:20"
          },
          {
            "label": "types",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_uint8)",
            "contract": "Project",
            "src": "contracts/Project.sol:21"
          },
          {
            "label": "_metadata",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_bytes_storage))",
            "contract": "Project",
            "src": "contracts/Project.sol:22"
          },
          {
            "label": "operators",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "contract": "Project",
            "src": "contracts/Project.sol:23"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_bytes32,t_bytes_storage))": {
            "label": "mapping(uint256 => mapping(bytes32 => bytes))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint8)": {
            "label": "mapping(uint256 => uint8)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "66a44f3575e63cebbfd40637398819c8ac1ef8d3055ec9bef9cba8604c3f329b": {
      "address": "0x877C8A9Fc8A277F9434bEfd02A3B6Ca1084D50E4",
      "txHash": "0xd1b6d731ffd75e27d15672a9b6bdb0f1b77696a6fd6492f4a9954d9cf448f58b",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "project",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(IProject)6759",
            "contract": "ProjectRegistry",
            "src": "contracts/ProjectRegistry.sol:9"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IProject)6759": {
            "label": "contract IProject",
            "numberOfBytes": "20"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "c00583702650eca386cb045284953f51cf917f0ff719e7121fc16c44b3fa5740": {
      "address": "0xE1A8453D0C5123F0Cb36C203a694aA4BbF78B03B",
      "txHash": "0xa6e86be1d051add435eacb9f584efef491465e1c86dd84424b2ab7390d1ce1e7",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "project",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "ioIDStore",
            "src": "contracts/ioIDStore.sol:14"
          },
          {
            "label": "ioIDRegistry",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "ioIDStore",
            "src": "contracts/ioIDStore.sol:15"
          },
          {
            "label": "price",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "ioIDStore",
            "src": "contracts/ioIDStore.sol:16"
          },
          {
            "label": "projectDeviceContract",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ioIDStore",
            "src": "contracts/ioIDStore.sol:17"
          },
          {
            "label": "deviceContractProject",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ioIDStore",
            "src": "contracts/ioIDStore.sol:18"
          },
          {
            "label": "projectAppliedAmount",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ioIDStore",
            "src": "contracts/ioIDStore.sol:19"
          },
          {
            "label": "projectActivedAmount",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ioIDStore",
            "src": "contracts/ioIDStore.sol:20"
          },
          {
            "label": "feeReceiver",
            "offset": 0,
            "slot": "108",
            "type": "t_address",
            "contract": "ioIDStore",
            "src": "contracts/ioIDStore.sol:21"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "fd90c528a53c78216f381bc63c2d7eddf8b206998e238ae70e2ca79c9c2f1a0c": {
      "address": "0x53B6Af88e28cbB8564854F759CEF7996D5504117",
      "txHash": "0x19067e8f687f3d88f7158dbe7376804e5d5d07f37b48dc58fa76c48a78fefa8a",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:17"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:20"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:23"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "nextId",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ioID",
            "src": "contracts/ioID.sol:20"
          },
          {
            "label": "minter",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "ioID",
            "src": "contracts/ioID.sol:21"
          },
          {
            "label": "walletRegistry",
            "offset": 0,
            "slot": "203",
            "type": "t_address",
            "contract": "ioID",
            "src": "contracts/ioID.sol:22"
          },
          {
            "label": "walletImplementation",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "ioID",
            "src": "contracts/ioID.sol:23"
          },
          {
            "label": "_wallets",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_bytes32,t_address)",
            "contract": "ioID",
            "src": "contracts/ioID.sol:25"
          },
          {
            "label": "_devices",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ioID",
            "src": "contracts/ioID.sol:26"
          },
          {
            "label": "deviceProject",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ioID",
            "src": "contracts/ioID.sol:28"
          },
          {
            "label": "projectDeviceCount",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ioID",
            "src": "contracts/ioID.sol:29"
          },
          {
            "label": "_projectIDs",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_address))",
            "contract": "ioID",
            "src": "contracts/ioID.sol:30"
          },
          {
            "label": "_resolvers",
            "offset": 0,
            "slot": "210",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ioID",
            "src": "contracts/ioID.sol:31"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_address))": {
            "label": "mapping(uint256 => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "ba98d9221271ef03e19dc7230a3eb4a6deeca850bcec30a436c9734258cf942b": {
      "address": "0x05D113C4c97c0D5ee674111B33a9E0DeB504B898",
      "txHash": "0x2e8e5ca10dc1603f6cc533c6369513c6bdc9a02c0f6b782b4f8ed8bdfb5d22c3",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "DOMAIN_SEPARATOR",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32",
            "contract": "ioIDRegistry",
            "src": "contracts/ioIDRegistry.sol:25"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_struct(Counter)3812_storage)",
            "contract": "ioIDRegistry",
            "src": "contracts/ioIDRegistry.sol:29"
          },
          {
            "label": "records",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_struct(Record)7694_storage)",
            "contract": "ioIDRegistry",
            "src": "contracts/ioIDRegistry.sol:36"
          },
          {
            "label": "ids",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ioIDRegistry",
            "src": "contracts/ioIDRegistry.sol:37"
          },
          {
            "label": "registeredNFT",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "contract": "ioIDRegistry",
            "src": "contracts/ioIDRegistry.sol:38"
          },
          {
            "label": "ioIDStore",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "ioIDRegistry",
            "src": "contracts/ioIDRegistry.sol:39"
          },
          {
            "label": "ioID",
            "offset": 0,
            "slot": "7",
            "type": "t_address",
            "contract": "ioIDRegistry",
            "src": "contracts/ioIDRegistry.sol:40"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)3812_storage)": {
            "label": "mapping(address => struct Counters.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Record)7694_storage)": {
            "label": "mapping(address => struct ioIDRegistry.Record)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3812_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Record)7694_storage": {
            "label": "struct ioIDRegistry.Record",
            "members": [
              {
                "label": "hash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "uri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    }
  }
}
